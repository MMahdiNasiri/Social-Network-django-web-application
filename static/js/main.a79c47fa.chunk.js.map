{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","window","location","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","href","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","console","log","onSubmit","newVal","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","createElement","tweetsEl","getElementById","ReactDOM","render","dataset","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.a79c47fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n\r\n\r\nexport function backendLookup(method, endpoint, callback, data){\r\n    let jsonData;\r\n    if (data){\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://localhost:8000/api${endpoint}`\r\n    xhr.responseType = 'json'\r\n    const csrftoken = getCookie('csrftoken');\r\n    xhr.open(method, url)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n    if (csrftoken){\r\n        xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n    }\r\n\r\n    xhr.onload = function(){\r\n        callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function (e) {\r\n        callback({\"message\": \"the rrequest err\"}, 400)\r\n    }\r\n    xhr.send(jsonData)\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\n\r\n\r\nexport function ActionBtn(props){\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0;\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm';\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n\r\n    const handleActionBackendEvent = (response, status) =>{\r\n        if ((status === 200 || status === 201) && didPerformAction){\r\n//            setLikes(response.likes)\r\n            didPerformAction(response, status)\r\n//            setUserLike(true)\r\n        }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay ;\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n}\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create\", callback, {content:newTweet})\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data =  {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\n\r\nexport function apiTweetList(username, callback) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","import React, {useState} from 'react'\r\n\r\nimport{ActionBtn} from './buttons'\r\n\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <div className='row'>\r\n            <div className='col-11 mx-auto p-3 border rounded bg'>\r\n            <p className='mb-0 text-muted small'>Retweet</p>\r\n            <Tweet hideActions className={' '} tweet={tweet.parent} />\r\n            </div>\r\n            </div> : null\r\n}\r\n\r\nexport function Tweet(props){\r\n    const {tweet, didRetweet, hideActions} = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n\r\n    const handleLink = (event) =>{\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n    }\r\n    const handlePerformAction = (newActionTweet, status) =>{\r\n        if(status === 200){\r\n            setActionTweet(newActionTweet)\r\n        }else if (status === 201){\r\n            if(didRetweet){\r\n                didRetweet(newActionTweet)\r\n            }\r\n        }\r\n    }\r\n\r\n    return <div className={className}>\r\n        <div>\r\n        <p>{tweet.id} - {tweet.content}</p>\r\n        <ParentTweet tweet={tweet} />\r\n        </div>\r\n        <div className='btn btn-group'>\r\n            {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display: \"Likes\"}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display: \"Unlike\"}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display: \"Retweet\"}}/>\r\n            </React.Fragment>\r\n            }\r\n            {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Tweet} from './detail'\r\nimport {apiTweetList} from './lookup'\r\n\r\n\r\nexport function TweetsList(props){\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(() => {\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length){\r\n            setTweets(final)\r\n        }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n    useEffect(() =>{\r\n    if(tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) =>{\r\n            if (status === 200){\r\n                setTweetsInit(response)\r\n                setTweetsDidSet(true)\r\n            }else{\r\n                alert(\"there is an error\")\r\n            }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n    }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n        const updateTweetsInit = [...tweetsInit]\r\n        updateTweetsInit.unshift(newTweet)\r\n        setTweetsInit(updateTweetsInit)\r\n        const updateFinalTweets = [...tweets]\r\n        updateFinalTweets.unshift(tweets)\r\n        setTweets(updateFinalTweets)\r\n    }\r\n    return tweets.map((item, index)=>{\r\n                return <Tweet\r\n                tweet={item}\r\n                didRetweet={handleDidRetweet}\r\n                className='my-5 py-5 border bg-white text-dark'\r\n                key={'${index}-{item.id}'}/>\r\n            })\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\nimport {apiTweetCreate} from './lookup'\r\n\r\n\r\nexport function TweetCreate(props){\r\n    const textAreaRef = React.createRef()\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n        if (status === 201){\r\n            didTweet(response)\r\n        }else{\r\n            console.log(response)\r\n            alert(\"An err occured\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const newVal = textAreaRef.current.value\r\n        apiTweetCreate(newVal, handleBackendUpdate)\r\n        textAreaRef.current.value = ''\r\n    }\r\n    return(\r\n    <div className={props.className}>\r\n            <form onSubmit={handleSubmit}>\r\n                <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n                </textarea>\r\n                <button type='submit' className='btn btn-primary my-3' >Tweet</button>\r\n            </form>\r\n    </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport {TweetsList} from './list'\r\nimport {Tweet} from './detail'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {TweetCreate} from './create'\r\n\r\n\r\nexport function TweetsComponent(props){\r\n    const [newTweets, setNewTweets] = useState([])\r\n\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) =>{\r\n        let tempNewTweets = [...newTweets]\r\n        tempNewTweets.unshift(newTweet)\r\n        setNewTweets(tempNewTweets)\r\n    }\r\n    return(\r\n    <div className={props.className}>\r\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n    const {tweetId} = props\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [tweet, setTweet] = useState(null)\r\n    const handleBackendLookup = (response, status) =>{\r\n        if (status === 200){\r\n            setTweet(response)\r\n        }else{\r\n            alert(\"There was an error finding your tweet\")\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if (didLookup === false){\r\n            apiTweetDetail(tweetId, handleBackendLookup)\r\n            setDidLookup(true)\r\n        }\r\n    }, [tweetId, didLookup, setDidLookup])\r\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n            <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent, TweetDetailComponent} from './tweets';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweets\");\nif (tweetsEl){\n    ReactDOM.render(e(TweetsComponent, tweetsEl.dataset) , tweetsEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweets-detail\")\n\ntweetDetailElements.forEach(container=>{\n    ReactDOM.render(\n    e(TweetDetailComponent, container.dataset),\n    container);\n})\n\n//ReactDOM.render(\n//  <React.StrictMode>\n//    <App />\n//  </React.StrictMode>,\n//  document.getElementById('root')\n//);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}